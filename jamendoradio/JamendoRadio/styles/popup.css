



		$(document).ready(function(){
			$("#slider").slider({ min: 0, max: 100, step: 1, value: bp.volume * 100, animate: true, change: function(event, ui) { bp.setVolume(ui.value / 100) } });
			$(".play").click(function() { bp.Pause(); $(".play").toggleClass("pause", bp.IsPlaying); }).toggleClass("pause", bp.IsPlaying);
			$(".stop").click(function() { bp.Unload(false); });
			$(".next").click(function() { bp.Next(); });
		
			if(!eval(localStorage["SkipDefault"])) AppendStation("Default", "");
			var storedStations = eval(localStorage["Stations"]);
            if (storedStations) {
                for (i = 0; i < storedStations.length; i++) {
					var updatedSubset = UpdateSubset(storedStations[i].Subset);
					AppendStation(storedStations[i].Name, updatedSubset);
                    storedStations[i].Subset = updatedSubset;
                }
            }
			localStorage["Stations"] = JSON.stringify(storedStations);
			
			loadPlayerInfo();
		});

        var bp = chrome.extension.getBackgroundPage();
		bp.OnPositionChanged = loadPlayerInfo;
		bp.OnImageLoaded = setImage;
		
		function LoadStation(config) {
			bp.PopulatePlaylist(config, true, function() { $(".play").toggleClass("pause", true); $(".controls").fadeIn("slow"); bp.Play(); }, false);
		}
		
		function loadPlayerInfo() {
			if (!bp.AlbumImageLoaded) $(".albumimage").hide();
			else $(".albumimage").css("background", "url(" + bp.CurrentData.album_image + ")").fadeIn("slow");

			$(".title").stop(true).css("margin-left", "0").html(bp.CurrentData.name);
			$(".album").stop(true).css("margin-left", "0").html(bp.CurrentData.album_name);
			$(".artist").stop(true).css("margin-left", "0").html(bp.CurrentData.artist_name);
			
			if(!bp.IsReady) $(".controls").hide();
			else {
				$(".album").click(function() { chrome.tabs.create({ "url": bp.CurrentData.album_url }); });
				$(".artist").click(function() { chrome.tabs.create({ "url": bp.CurrentData.artist_url }); });
				
				animate(".title", 160); animate(".album", 185); animate(".artist", 185);
				
				if($(".controls").css("display") == "none")
					$(".controls").fadeIn("slow");
			}
		}
		
		function setImage() {
			$(".albumimage").hide().css("background", "url(" + bp.CurrentData.album_image + ")").fadeIn("slow");
		}
		
		function AppendStation(name, config) {
			var newHtml = "<a href='javascript:LoadStation(\"{0}\");'>{1}</a>";
			$(".stations").append(sformat(newHtml, config, name));
		}
		
		function animate(elementName, widthLimit) {
		if(bp.IsReady && $(elementName).width() > widthLimit) {
			var distance = $(elementName).width() - widthLimit;
				$(elementName)
					.animate( { opacity: 1.0 }, 1500)
					.animate( { marginLeft : distance * -1 }, 2000, "swing")
					.animate( { opacity: 1.0 }, 700)
					.animate( { marginLeft : 0 }, 2000, "swing", function() { animate(elementName, widthLimit); });
			}
		}
	
		function sformat(inString, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) {
			return inString.replace(/{(\d)}/g, function(m) { 
				switch(m) {
					case "{0}": return v1;
					case "{1}": return v2;
					case "{2}": return v3;
					case "{3}": return v4;
					case "{4}": return v5;
					case "{5}": return v6;
					case "{6}": return v7;
					case "{7}": return v8;
					case "{8}": return v9;
					case "{9}": return v10;
				}
				return "";
			});
		}
		var userAlerted = false;
		function UpdateSubset(subset) {
			if(subset.indexOf("/?") > -1) return subset;
			var rxConfig = /[?&]?(\w+)=([\w+.]+)/g;

			var joins = "";
			var config = "";

			var setting = rxConfig.exec(subset);
			if(setting && !userAlerted) alert('The configuration string format has been updated to support playlist and user starred albums.\n\nI will try to convert your channels into the new format.');

			while(setting) 
			{ 
					userAlerted = true;
					
					if(setting[1] == "tag_idstr")
							joins += "+album_tag/";
							
					if(!config) config += "?" + setting[1] + "=" + setting[2];
					else config += "&" + setting[1] + "=" + setting[2];
											
					setting = rxConfig.exec(subset);
			}

			if(!joins) joins = "/";
			return joins + config;
		}